# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: false # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    # attraction.search_filter:
    #     parent:    "api_platform.doctrine.orm.search_filter"
    #     arguments: [ { addressLocality: "partial", geo.latitude: "partial", geo.longitude: "partial"  } ]
    #     tags:      [ { name: 'api_platform.filter', id: 'attraction.search' } ]

    touristAttraction.collection_data_provider:
        class: 'App\DataProvider\TouristAttractionCollectionDataProvider'
        arguments: ["@request_stack","@doctrine", "%amadeus_key%"]
        tags:
            -  { name: 'api_platform.collection_data_provider', priority: 2 }
